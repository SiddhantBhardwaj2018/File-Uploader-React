{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhard\\\\Desktop\\\\React Projects Compendium\\\\file_uploader_react\\\\client\\\\src\\\\components\\\\FileUpload.js\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [fileName, setfileName] = useState('Choose Your File');\n  const [uploadedFile, setuploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setuploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setfileName(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setuploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); //Clear Percentage\n\n          setTimeout(() => setuploadPercentage(0), 10000);\n        }\n      });\n      const {\n        fileName,\n        filepath\n      } = res.data;\n      setuploadedFile({\n        fileName,\n        filepath\n      });\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, fileName)), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row  mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, uploadedFile.fileName))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/bhard/Desktop/React Projects Compendium/file_uploader_react/client/src/components/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","axios","FileUpload","file","setFile","fileName","setfileName","uploadedFile","setuploadedFile","message","setMessage","uploadPercentage","setuploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","filepath","data","err","response","status","msg"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport Message from './Message'\r\nimport Progress from './Progress'\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n    const [file,setFile] = useState('');\r\n    const [fileName,setfileName] = useState('Choose Your File')\r\n    const [uploadedFile,setuploadedFile] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [uploadPercentage, setuploadPercentage] = useState(0)\r\n\r\n    const onChange =  e => {\r\n        setFile(e.target.files[0]);\r\n        setfileName(e.target.files[0].name)\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file',file);\r\n\r\n        try{\r\n            const res = await axios.post('/upload',formData,{\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data'\r\n                },\r\n                onUploadProgress: progressEvent => {\r\n                    setuploadPercentage(parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total)))\r\n                    \r\n                //Clear Percentage\r\n                setTimeout(() => setuploadPercentage(0),10000)\r\n        \r\n                }\r\n            });\r\n\r\n            const { fileName, filepath } = res.data;\r\n\r\n            setuploadedFile({ fileName, filepath })\r\n\r\n            setMessage('File Uploaded')\r\n        }catch(err){\r\n            if(err.response.status === 500){\r\n                setMessage('There was a problem with the server')\r\n            }else{\r\n                setMessage(err.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                message ? <Message msg={message} /> : null\r\n            }\r\n            <form onSubmit={onSubmit}> \r\n            <div className=\"custom-file\">\r\n                <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={onChange} />\r\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    {\r\n                        fileName\r\n                    }\r\n                </label>\r\n            </div>\r\n                    \r\n            <Progress percentage={uploadPercentage} />\r\n\r\n            <input type='submit' value=\"Upload\" className=\"btn btn-primary btn-block mt-4\" />\r\n            </form>\r\n            { uploadedFile ? <div className=\"row  mt-5\">\r\n                <div className=\"col md-6 m-auto\">\r\n                <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\r\n                </div>\r\n            </div> : null }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n"]},"metadata":{},"sourceType":"module"}